Extends the excellent OpenCPN project with the ability to act as a WMS server.

Remember NOT to use any charts that you don't have legal access to.
Rendering speed is limited, if you need fast rendering then use one of the commercial engines

Work in progress!

Testing with a to engines running in Chrome using Leaflet and OpenLayers as clients and a set of S-57 charts.

There is a test html in the wms folder of the project. It is using Santa Catalina Island and some areas in DK as a reference, US charts US5CA76M, US4CA60M and US3CA70M should do for Santa Catalina, available from NOAA.


Known Problems:
Small images not rendered properly (messing up scaling)
Rapid zoom causes crashes
Unless large pixel areas are requested then the returned charts are messed up

Sidenote:
Could be used for rendering a "view only" set for low power up devices, might try to do that on a small esp32 based 4" thing if I get bored. Just another layer.

Tech for the WMS explanation:
rest_server_wms.h & cpp runs a thread that starts a mongoose listener on port 8091 and extracts wms requests.
The request params are put into a WmsReqParams struct and passed to the gui thread using a callback (all done to get the ui rendering done in the WXWidgets gui thread)
the OpenCPN "main thingomobob" ocpn_app.h & cpp eventifies (EventifyWmsReqParam) the WmsReqParams to make it a WXWidgets event.
Finally the WmsFframe (that has a handle to the primary ui) receives the event at set the coordinates and sizes etc. in a couple of calls in OnWmsRequestEvent
Eventually the graphics is captured and returned to the WMS client consuming the image.

Activity log:
20250612 sync to OpenCPN, displaying 5.11, still pan + zoom problems + overzoom.
20250623 Updated, WMS GetCapabilities is accepted by QGIS 3.40.7, the rest server crashes and QGIS slices the chart in a way that OpenCPN does not like.
